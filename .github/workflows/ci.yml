name: CI

on:
  push:
    branches: [main, cross-platform]
  pull_request:
  workflow_dispatch:

jobs:
  tests:
    name: "Unit‑tests (Python ${{ matrix.python-version }})"
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - name: 🛎️Checkout repo
        uses: actions/checkout@v4

      - name: 📦Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: "1.8.2"
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: 🐍Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"          # ↖ automatic dependency caching

      - name: 📚Install project (incl. dev extras)
        run: |
          poetry install --with dev --no-interaction
          poetry build -f wheel      # guarantees the package itself is buildable

      - name: ✅Run test‑suite + coverage
        run: |
          poetry run pytest --cov=synplan --cov-report=xml

      - name: ⬆️Upload coverage artefact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

  style:
    name: "Stylecheck (black)"
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "poetry"
      - uses: snok/install-poetry@v1
        with:
          version: "1.8.2"
      - run: |
          poetry install --with dev --no-interaction --no-root
          poetry run black --check synplan tests
